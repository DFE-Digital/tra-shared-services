{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "keyVaultName": {
      "type": "string"
    },
    "tfStateStorageAccountName": {
      "type": "string"
    },
    "dbBackupStorageAccountName": {
      "type": "string",
      "defaultValue": "false"
    },
    "keyVaultReaderServicePrincipalId": {
      "type": "string"
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "tenantId": "9c7d9dd3-840c-4b3f-818e-552865082e16",
    "deliveryTeamGroupId": "ce5793a4-b822-4018-a65d-6c04e96918b2",
    "tfStateContainers": ["dqtapi-tfstate", "dqtmonitoring-tfstate", "fmtrn-tfstate"],
    "dbBackupContainers": ["find-a-lost-trn", "dqt-api"]
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[parameters('tfStateStorageAccountName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "IsVersioningEnabled": true
      }
    },
    {
      "condition": "[not(equals(parameters('dbBackupStorageAccountName'), 'false'))]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[parameters('dbBackupStorageAccountName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_GRS"
      },
      "kind": "StorageV2",
      "properties": {
        "IsVersioningEnabled": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('tfStateStorageAccountName'), '/default/', variables('tfStateContainers')[copyIndex()])]",
      "copy": {
        "name": "blobIterator",
        "count": "[length(variables('tfStateContainers'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('tfStateStorageAccountName'))]"
      ]
    },
    {
      "condition": "[not(equals(parameters('dbBackupStorageAccountName'), 'false'))]",
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(parameters('dbBackupStorageAccountName'), '/default/', variables('dbBackupContainers')[copyIndex()])]",
      "copy": {
        "name": "blobIterator",
        "count": "[length(variables('dbBackupContainers'))]"
      },
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('dbBackupStorageAccountName'))]"
      ]
    },
    {
      "condition": "[not(equals(parameters('dbBackupStorageAccountName'), 'false'))]",
      "name": "[concat(parameters('dbBackupStorageAccountName'), '/default')]",
      "type": "Microsoft.Storage/storageAccounts/managementPolicies",
      "apiVersion": "2019-06-01",
      "dependsOn": [
          "[concat('Microsoft.Storage/storageAccounts/', parameters('dbBackupStorageAccountName'))]"
      ],
      "properties": {
          "policy": {
              "rules": [
                  {
                      "name": "ruleDelete",
                      "enabled": true,
                      "type": "Lifecycle",
                      "definition": {
                          "filters": {
                              "blobTypes": [
                                  "blockBlob"
                              ],
                              "prefixMatch": [
                                  "find-a-lost-trn",
                                  "dqt-api"
                              ]
                          },
                          "actions": {
                              "baseBlob": {
                                  "delete": {
                                      "daysAfterModificationGreaterThan": 35
                                  }
                              },
                              "snapshot": {
                                  "delete": {
                                      "daysAfterCreationGreaterThan": 35
                                  }
                              }
                          }
                      }
                  }
              ]
          }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[parameters('keyVaultName')]",
      "location": "[variables('location')]",
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[variables('tenantId')]",
            "objectId": "[variables('deliveryTeamGroupId')]",
            "permissions": {
              "secrets": [
                "get",
                "list",
                "set",
                "delete",
                "recover",
                "backup",
                "restore"
              ]
            }
          },
          {
            "tenantId": "[variables('tenantId')]",
            "objectId": "[parameters('keyVaultReaderServicePrincipalId')]",
            "permissions": {
              "secrets": [
                "get",
                "list"
              ]
            }
          }
        ],
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[variables('tenantId')]"
      }
    }
  ]
}
